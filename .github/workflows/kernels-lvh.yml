name: Test MCPSpy across various Linux Kernels with LVH

on:
  push:
    branches: [eBPF-kernels]
  pull_request:
    branches: [eBPF-kernels]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # Ensure that only one job runs at a time for this workflow
  cancel-in-progress: true

jobs:
  e2e-build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm make libbpf-dev build-essential

      - name: Install Go tools
        run: go install github.com/cilium/ebpf/cmd/bpf2go@latest

      - name: Download dependencies
        run: go mod download

      - name: Build MCPSpy
        run: make build

      - name: Upload MCPSpy binary
        uses: actions/upload-artifact@v4
        with:
          name: mcpspy-binary
          path: build/mcpspy-linux-amd64

  e2e-kernel-tests:
    needs: e2e-build
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false # Continue running all jobs even if one fails
      matrix:
        # List of kernel versions to test against
        # Find available tags here: https://quay.io/repository/lvh-images/kind?tab=tags
        kernel:
          - "5.10-20250729.205433-amd64"
#          - "5.15-20250729.205433-amd64"

    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download MCPSpy binary
        uses: actions/download-artifact@v4
        with:
          name: mcpspy-binary

      - name: Provision LVH VMs
        uses: cilium/little-vm-helper@v0.0.26
        with:
          test-name: mcpspy-test-${{ matrix.kernel }}
          image: "kind" # Available options: kind, complexity-test, base (needs authentication)
          image-version: ${{ matrix.kernel }} # Pull the specific kernel version for testing
          host-mount: . # Mount the current workspace into the VM
          install-dependencies: "true"
          cmd: |
            echo ""
            # Print the kernel version of the test VM
            echo "Kernel Version: "
            uname -a
            echo "Whoami: "
            whoami

            echo ""
            # goto where host is mounted
            cd /host

            echo ""
            ls -lah # List files to verify access

            echo ""
            echo "Running MCPSpy on LVH VM with kernel ${{ matrix.kernel }}"
            chmod +x ./mcpspy-linux-amd64
            sudo nohup ./mcpspy-linux-amd64 > mcpspy-output.log 2>&1 &

            echo ""
            cat mcpspy-output.log

            # @TODO Could move the python venv build to build step so to speed up the test
            apt-get update && apt-get install -y python3 python3-pip python3-venv

            echo ""
            echo "Running end-to-end tests"
            make test-e2e-mcp

            echo ""
            cat mcpspy-output.log
